services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs:ro
    ports:
      - "443:443"
    environment:
      DEFAULT_HOST: premsanity.dev
      CERT_NAME: premsanity.dev
    networks:
      - app-network

  mysql:
    image: mariadb:10
    container_name: mysql
    environment:
      MYSQL_HOST: mysql
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: $MYSQL_PORT
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      BACKEND_PORT: $BACKEND_PORT
      VIRTUAL_HOST: api.premsanity.dev
      VIRTUAL_PORT: 80
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: always

  frontend:
    container_name: frontend
    build:
      context: ./react
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./react:/app
      - /app/node_modules
    environment:
      VITE_APP_ENV: $VITE_APP_ENV
      VIRTUAL_HOST: www.premsanity.dev
      VIRTUAL_PORT: 80
    networks:
      - app-network

volumes:
  mysql-data:
    driver: local
    driver_opts:
      type: none
      device: ./data
      o: bind

networks:
  app-network:
    driver: bridge
