version: '3.8'

services:
  frontend:
    build:
      context: ./react
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./react:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - React_ENV=development
      #- React_ENV=production
    command: npm run dev
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app
    volumes:
      - ./backend:/app
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=user
      - DB_PASSWORD=userpass
      - DB_NAME=personal-site-db
      - GO_ENV=development
    # - GO_ENV=production
    depends_on:
      - mysql
    networks:
      - app-network
    restart: always

  mysql:
    image: mysql:8.0
    ports:
      - "3305:3306"
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: personal-site-db
      MYSQL_USER: user
      MYSQL_PASSWORD: userpass
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
#    healthcheck:
#      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#      start_period: 30s

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge
